<?xml version="1.0" encoding="UTF-8"?>

<mule xmlns="http://www.mulesoft.org/schema/mule/core"
      xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
      xmlns:spring="http://www.springframework.org/schema/beans"
      xmlns:vm="http://www.mulesoft.org/schema/mule/vm"
      xmlns:mulexml="http://www.mulesoft.org/schema/mule/xml"
      xmlns:hornetq="http://www.mulesoft.org/schema/mule/hornetq"
      xmlns:spring-util="http://www.springframework.org/schema/util"

      xsi:schemaLocation="
        http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-3.0.xsd
        http://www.mulesoft.org/schema/mule/core http://www.mulesoft.org/schema/mule/core/3.2/mule.xsd
        http://www.mulesoft.org/schema/mule/vm http://www.mulesoft.org/schema/mule/vm/3.2/mule-vm.xsd
        http://www.mulesoft.org/schema/mule/xml http://www.mulesoft.org/schema/mule/xml/3.2/mule-xml.xsd
        http://www.mulesoft.org/schema/mule/hornetq http://www.mulesoft.org/schema/mule/hornetq/1.0/mule-hornetq.xsd
        http://www.springframework.org/schema/util http://www.springframework.org/schema/util/spring-util-3.0.xsd">

    
    <spring:bean id="hornetq.embedded" class="org.hornetq.core.server.embedded.EmbeddedHornetQ" init-method="start" destroy-method="stop">
           <spring:property name="configResourcePath" value="tests-hornetq-configuration.xml"/>     
    </spring:bean>

    <spring:bean id="hornetq.session" factory-bean="hornetq.clientSessionFactory" factory-method="createSession" init-method="start" destroy-method="stop">
        <spring:constructor-arg value="true"/>
        <spring:constructor-arg value="false"/>
        <spring:constructor-arg value="0"/>
    </spring:bean>
    <spring:bean id="hornetq.clientSessionFactory" factory-bean="hornetq.locator" factory-method="createSessionFactory" destroy-method="close"/>
    <spring:bean id="hornetq.locator" class="org.hornetq.api.core.client.HornetQClient" factory-method="createServerLocatorWithoutHA" destroy-method="close">
        <spring:constructor-arg>
            <spring:bean name="transportConfiguration" class="org.hornetq.api.core.TransportConfiguration" depends-on="hornetq.embedded">
                <spring:constructor-arg value="org.hornetq.core.remoting.impl.invm.InVMConnectorFactory"/>
            </spring:bean>
        </spring:constructor-arg>
    </spring:bean>
    
    <spring:bean id="countDownLatch1" class="java.util.concurrent.CountDownLatch">
        <spring:constructor-arg value="1"/>
    </spring:bean>
    
    <flow name="testSend">
        <logger level="INFO" message="Got something #[payload:]"/>
        <hornetq:send clientSession-ref="hornetq.session" address="app.test"/>
    </flow>
    
    <flow name="testSendWithAddressExpression">
        <logger level="INFO" message="Got something #[payload:]"/>
        <hornetq:send clientSession-ref="hornetq.session" address="#[header:INBOUND:address]"/>
    </flow>
    
    <flow name="testSendWithHeaderExpression">
        <logger level="INFO" message="Got something #[payload:]"/>
        <hornetq:send clientSession-ref="hornetq.session" address="app.test">
            <spring:property name="headers">
                <spring:map>
                    <spring:entry key="TEST" value="#[function:count]"></spring:entry>
                </spring:map>
            </spring:property>
        </hornetq:send>
    </flow>
    
    <flow name="testConsume">
        <custom-source class="org.mule.modules.hornetq.HornetQConsumerSource">
            <spring:property name="clientSession" ref="hornetq.session"/>
            <spring:property name="queue" ref="testq"/>
        </custom-source>
        <logger level="INFO"/>
        <logger level="INFO" message="Got something #[payload:]"/>
        <invoke object-ref="countDownLatch1" method="countDown"></invoke>
    </flow>
    
<!--     <flow name="testConsume2"> -->
<!--         <hornetq:consume address="app.test"/> -->
<!--         <logger level="INFO" message="Got something #[payload:]"/> -->
<!--     </flow> -->
    
    <spring:beans>
        <spring:bean id="testq" class="org.mule.modules.hornetq.Queue">
            <spring:constructor-arg value="app.test2" />
            <spring:constructor-arg value="sailthru.send2" />
        </spring:bean>
    </spring:beans>

</mule>
